---
import BaseLayout from "../../layouts/BaseLayout.astro"
import { getCollection, getEntry, render} from 'astro:content';
import BlogHeader from '../../components/blog/BlogHeader.tsx';
import TableOfContents from '../../components/blog/TableOfContents.tsx';

export async function getStaticPaths() {
  const pages = await getCollection('blogPosts');

  return pages.map((page) => {
    return {params: {
      blogPost: page.data.slug,
    }, 
    props: {
      title: page.data.title,
      id: page.data.id,
      tags: page.data.tags,
    }}});
}

const { blogPost } = Astro.params;
const { title, id, tags } = Astro.props;

const formattedTitle = title ? `| ${title}` : '';

const entry = await getEntry('blogPosts', id);

if (!entry) {
  throw new Error(`Blog post with id ${id} not found.`);
}

const { Content, headings } = await render(entry);

let defaultTags = tags || [];
---

<BaseLayout title={formattedTitle}>
  <article class="blogPost" slot="blog">
    <BlogHeader title={title} tags={defaultTags} />
    <TableOfContents headings={headings} />
    <Content />
  </article>
</BaseLayout>

<style is:global>

  .blogPost {
    margin-top: 0.5rem;
    padding: 3rem;
    padding-top: 1rem;
    background-color: var(--background-color);
    border-radius: 10px 10px 10px 10px;
    height: fit-content;
  }

  .blogPost h1, .blogPost h2, .blogPost h3, .blogPost h4, .blogPost h5, .blogPost h6 {
    color: var(--primary-text-color);
    font-weight: 600;
    margin: 2.0rem 0 2.0rem 0;
    background-color: var(--background-color-main);
    border-radius: 5px;
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
    box-shadow: 
      -2rem 0px var(--background-color-main), 
      1rem 0px var(--background-color-main),
      -2rem 2px var(--primary-bar-color),
      1rem 2px var(--primary-bar-color);
    clear: both;
  }

  .blogPost {
    font-size: 1.1rem;
    text-align: justify;
  }

  .blogPost img {
    max-width: 100%;
    height: auto;
    border: 1px solid var(--primary-bar-color);
    box-shadow: 0 0 10px 10px rgba(0, 0, 0, 0.1);
  }

  .blogPost pre {
    margin-left: 1rem;
    border: 1px solid var(--primary-bar-color);
    box-shadow: 0 0 10px 10px rgba(0, 0, 0, 0.1); 
  }

  /* TODO: Swap with a fancy font */
  .blogPost blockquote {
    color: var(--accent-text-color);
    background-color: var(--accent-text-background-color);
    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
    font-size: clamp(1.2rem, 2rem, 4vw);
    font-weight: 600;

    float: right;

    width: 40%;
    padding: 1.0rem 0.25rem;
    border-left: 3px solid var(--primary-bar-color);
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);

    text-align: left;

    margin-top: 1rem;
    margin-bottom: 1rem;
    margin-left: 2.0rem;
  }

  .blogPost p {
    padding-left: 1rem;
    padding-right: 1rem;
  }

  .blogPost blockquote p {
    margin: 0;
    padding: 0;
  }

  .blogPost a {
    color: var(--primary-accent-color);
  }

  .blogPost a:visited {
    color: var(--primary-accent-color);
  }

  @media (max-width: 768px) {
   .blogPost blockquote { 
      float: none;
      width: 100%;
      margin: 1rem 0;
      font-size: clamp(1.1rem, 1.5rem, 3vw);
    }

    .blogPost {
      font-size: 1rem;
    }


    .blogPost {
      padding: 1rem;
    }
  }


</style>